# Generated by Django 5.2.6 on 2025-09-13 17:29

import django.db.models.deletion
import uuid
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Device',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('device_id', models.UUIDField(default=uuid.uuid4, editable=False, help_text='Unique device identifier', unique=True)),
                ('name', models.CharField(help_text='Device/PC name', max_length=255)),
                ('hostname', models.CharField(help_text='System hostname', max_length=255)),
                ('ip_address', models.GenericIPAddressField(blank=True, help_text='Current IP address', null=True)),
                ('mac_address', models.CharField(blank=True, help_text='MAC address', max_length=17)),
                ('os_version', models.CharField(help_text='Operating system version', max_length=255)),
                ('agent_version', models.CharField(blank=True, help_text='Agent software version', max_length=50)),
                ('status', models.CharField(choices=[('online', 'Online'), ('offline', 'Offline'), ('locked', 'Locked'), ('unlocked', 'Unlocked'), ('error', 'Error')], default='offline', help_text='Current device status', max_length=20)),
                ('is_locked', models.BooleanField(default=False, help_text='Whether the device is currently locked')),
                ('last_seen', models.DateTimeField(blank=True, help_text='Last heartbeat received', null=True)),
                ('registered_at', models.DateTimeField(auto_now_add=True, help_text='Device registration time')),
                ('last_lock_time', models.DateTimeField(blank=True, help_text='Last time device was locked', null=True)),
                ('last_unlock_time', models.DateTimeField(blank=True, help_text='Last time device was unlocked', null=True)),
                ('hardware_info', models.JSONField(blank=True, default=dict, help_text='Hardware information (CPU, RAM, etc.)')),
                ('location', models.CharField(blank=True, help_text='Physical location of device', max_length=255)),
                ('department', models.CharField(blank=True, help_text='Department or division', max_length=100)),
                ('is_active', models.BooleanField(default=True, help_text='Whether device is active')),
                ('owner_user', models.ForeignKey(blank=True, help_text='Device owner/user', null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='owned_devices', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Device',
                'verbose_name_plural': 'Devices',
                'db_table': 'devices',
                'ordering': ['-last_seen', 'name'],
            },
        ),
        migrations.CreateModel(
            name='DeviceGroup',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(help_text='Group name', max_length=100, unique=True)),
                ('description', models.TextField(blank=True, help_text='Group description')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('created_by', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='created_device_groups', to=settings.AUTH_USER_MODEL)),
                ('devices', models.ManyToManyField(blank=True, help_text='Devices in this group', related_name='groups', to='devices.device')),
            ],
            options={
                'verbose_name': 'Device Group',
                'verbose_name_plural': 'Device Groups',
                'db_table': 'device_groups',
            },
        ),
        migrations.CreateModel(
            name='DeviceToken',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('token', models.CharField(help_text='API token for device authentication', max_length=255, unique=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('last_used', models.DateTimeField(blank=True, null=True)),
                ('is_active', models.BooleanField(default=True)),
                ('device', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='token', to='devices.device')),
            ],
            options={
                'verbose_name': 'Device Token',
                'verbose_name_plural': 'Device Tokens',
                'db_table': 'device_tokens',
            },
        ),
    ]
